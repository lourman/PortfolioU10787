<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABeDgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAALEwAACxMBAJqcGAAADhBJREFUeJzt3XuMXFUdwPEp5eHuzr3ThwgFxEhAJWgCEgUUEWLCP77Q
        pJACif5hFrs7584uWJVEWdRGMRpkBZqslM65s5bgRmPEoPEvJI0lCokiooAPBAQFKkQeAoWynjN3rbV0
        78y5M3POuWe+n+QX+GMzvXPPnO/M3Z2drVQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMCA1DZuXx3X5YZIpFdGSbpFzRzT34lFek01aX621mieXVm/sHJg
        izlz28E1Ic+Jk/TzamZd3+9AZ0ucyBm9Z/TeGdhaDlrUmH9rJORCLOTL6sGyyNgauUs9eL5wxGWtsX6t
        5eETC1UVmStUxP/p/v4N0ai9o/eQ3kv9Wksr1ANlio3vdtQD56Ha1Pw7e13LWiJPjRL5iOv7M9TTDkE6
        1Y+9OXDqmeJq5yeMaY96Ofl8+7KgoFrS/IC+Ddf3g1katbf6uFX7T5Vqo/OTxOw3cldt6sbjTNcySrad
        oJ75n3J//Mz/TV1eMoi927PRqfl16mXnc85PEPPaEfJW0/VUz/w/c37czGtG7zG91waxh3uini2uc31y
        mOWnmqRndruW1YY8y/XxMstPJNJrB7mXza1fWKmeZZ50fWKYnAdNkm7pdjnbP1r04JiZ5Ubu0j+SHeSW
        NhI10jNyD1jIl2LRmhydaB6pf7bJ9HeWfuR6c24ARPpg1+sp0ofzb0tujybTt7i+3yHOWHLTEXqvqPP8
        Yu4aNFqnDXJPG1EHdGF+ANIrXB9j8NqvwtLf5TxrvNLVs8b43CHqdvbkhOTuyszMQRbu0VDTb5zL3VN1
        ucH1Me6lrv+n8w5WX1O6PsZhoJ6Zr89bh5HJrUd1ug39NbnPPIm8zsZ9GXadvg+j95zrY9xLvw01/yVj
        6z2uj3EY6LcE563DqonvvqnTbeiv6fBq7hob92XY6T2T+6Sq9pzrY9yLAPiBAISDAMAYAQgHAYAxAhAO
        AgBjBCAcBADGCEA4CACMEYBwEAAYIwDhIAAwRgDCQQBgjACEgwDAGAEIBwGAMQIQDgIAYwQgHAQAxghA
        OAgAjBGAcBAAGCMA4SAAMEYAwkEAYIwAhIMAwBgBCAcBgDECEA4CAGMEIBwEAMYIQDgIAIwRgHAQABgj
        AOEgADBGAMJBAGCMAISDAMAYAQgHAYAxAhAOAgBjBCAcBADGCEA4CMA+ItE8PU7kLeq2Ho0S+VRoo+7b
        /eq+zUaT6dpezhMBCAcBWBILea66jd25D8pgRt5fazRXFT9XBCAUBKBtcYV6wD3gfmPaG/WKYHPRdSAA
        4SAAyuokPdb1hrQ+Qu4sug4EIBwEQBmdml/nfENaD0B6e9F1IADhIABL1EviO51vSosT1dNNRc8VAQgH
        AVhSE+kpkUifdr0xrYyQOypi9rCi54oAhIMA7KP9vQCRXq1fHkdJeldoozb+req+icrMwqG9nCcCEA4C
        AGMEIBwEAMYIQDgIAIwRgHAQABgjAOEgADBGAMJBAGCMAISDAMAYAQgHAYAxAhAOAgBjBCAcBADGCEA4
        CACMEYBwEAAYIwDhIAAwRgDCQQBgjACEgwDAGAEIBwGAMQIQDgIAYwQgHAQAxghAOAgAjBGAcBAAGCMA
        4SAAMEYAwkEAYIwAhIMAwBgBCAcBgDECEA4CAGOlCMD0wkhNyM/Fify56z/IMpA/8pKkd6j/zsXTreN7
        OU0EAMa8D4Da/JFIf5V7+4FMlMhno0brtKKnigDAmO8BiIW83PXGtByB3xQ9VwQAxkoQgB2uN6XtGZnc
        elSRc0UAYMz7ACTyF643pO1Zfem2NxY5VwQAxnwPgLr+v9L1hrQ8fyh+rkoUAHWt08g72JqQ57g+xmHQ
        /u5zzjqMTjSP7HQbgwzA2k1bI3UZcI8HG9PGvFBrNM8ueq5KFYC4kV6Qd7AqEN92fYyhWzc+NxoJ+dDy
        G1e+XJmZOajT7Qz6x4Crx+dq6ji/pr9Bpl4R/Dm0Uef5PhXi76nNf3Iv56lUAdB3Nr+G8lX139lqff59
        tUSeyvR3oob8iDq/d3R4Rurq5ShvBPJDqQJQqSyuUPV72IOXXcyyG1d+vZuVJAB+KFkA2tefX3H+IGeW
        27R7xia3vaObdSQAfihdANaI+Vg9yzzp/MHOHGDTStntOhIAP5QuAJp6FfAh/Wzj/AHP7B21Jn+KJtO1
        3a4hAfBDKQOgxaI1SQQ8GSEfG5uSJ5msHwHwQ2kDoEX15ge5HHC++XeMTMujTdeOAPih1AHQ2j/v1d8Y
        FOnfnG+GoRn5qjrnv6w1Wuv1T2aKrBsB8EPpA/A/iytqIj0lFs2LIpFeqn8XnOnvqI1fr4r0o0We8fdH
        APwQVgD0m1USeTEBGGAAGq3z1oj5Y3pdLQLgh9IHoNZorlIvR7+qDvZR9y+Nh2X0JYC8U781m0uAcit1
        ALK3pspd7jfEEI+QO/kmYHmVNgD65Sg/BvRk+DFgaZUyAOqgP8zm92v0b6hVL93++m7XkAD4oXQBaP+u
        dyIfd/2AZw64adNu15EA+KF0AeCXgTwez34ZKE62vUvd1hfVY+aq8EZuVpde51fG5w7p5RyVLACLK9Qd
        f8T5A53Jm290s5KDDcDiik4fWxbKqEuvX48lNx1R9EyVKgDtN/rknhD9gSDyW9UkPdP1h2eEONkvYcmd
        HR6Uzj8QJK7LDa43ptUR8odFz1WpAqBf8uTWkI8EG7j2R4Il8q85D0bnHwmmQvVT55vSagDSPbWN21cX
        OldlCgAfCuoH3z8UtP0mJdeb0vLUpm48rtC5KlMA+FhwP/j/seDyO643pN2Ru4p+M5AAwJjvAdB/MDMS
        6TPuN6alEakoeq4IAIz5HgCt/U3L4P9AqHxcfzBOL+eJALgyvTCif7W2KuSnevnrri6UIQD/pd+dqK+P
        Q5v2b2SuX1jZ6/khAA7EdfnuA3yAyU8On1iouj62bpQpAMhHACzTn2AUC/mPAz/ou/9UXZcIQDgIgGVR
        vfXJnPuwW/+ug+tj7IQAhIMAWBYl8ku5J7yRnuj6GDshAOEgAJZ1+mWmsaT1dtfH2AkBCAcBsIwAZAiA
        HwiAZQQgQwD8QAAsIwAZAuAHAmAZAcgQAD8QAMsIQIYA+IEAWEYAMgTADwTAMgKQIQB+IACWEYAMAfAD
        AbCMAGQIgB8IgGUEIEMA/EAALCMAGQLgBwJgGQHIEAA/EADLCECGAPiBAFhGADIEwA8EwDICkCEAfiAA
        lhGADAHwAwGwjABkCIAfCIBlBCBDAPxAACwjABkC4AcCYBkByBAAPxAAywhAhgD4gQDsY3WSHqseeFer
        uV1t1LsGNI/l3ockvXdQ/3Ys5K3tPyQ5s3BoL+eJAISDACypifSUSKRP5z4oQxkhd1TE7GFFzxUBCAcB
        WBIl8k7nG9PiRPV0U9FzRQDCQQCU0an5da43pPVRlzlF14EAhIMAVJau/V1vSOsBkDuLrgMBCAcBaFtc
        oR5wDzjflBZHXfJsLroOBCAcBGCJekY8V93Gbtcb087I+2uN5qri54oAhIIA7CMSzdPV5rhF3daj6hny
        qcFM+kKHZ+Z/Derf1htf/Ruz0WS6tpfzRADCQQAs441AGQLgBwJgGQHIEAA/EADLCECGAPiBAFhGADIE
        wA8EwDICkCEAfiAAlhGADAHwAwGwjABkCIAfCIBlBCBDAPxAACwjABkC4AcCYBkByBAAPxAAywhAhgD4
        gQBYRgAyBMAPBMAyApAhAH4gAJYRgAwB8AMBsIwAZAiAHwiAZQQgQwD8QAAsIwAZAuAHAmAZAcgQAD8Q
        AMsIQIYA+IEAWEYAMgTADwTAMgKQIQB+IACWEYAMAfADAbAsEvLLuQGYkie5PsZOCEA4CIBlcV1ekvOg
        3xNP37DG9TF2QgDCQQAsG51oHhkl8tkDP+jlj10fXzcIQDgIgAPVRuu8KEmf32/z36P/SrHrY+sGAQgH
        AXBkjZg/RkXgMjVXxaJ5UUXMHub6mLpFAMJBAGCMAISDAMAYAQgHAYAxAhCOUgUgSuR07sE25Fmuj3EY
        REJen7cOI5Nbj+p0G2Ofbr0hNwBJeoON+zLsYiHPzV8HWXd9jHupA7qww8HOuD7G4K1fWKnO8705a/BK
        Zea2gzvezszMQerrd+es599rG7evtnCPhpp6pTWf+6RaTz/u+hj3ikTz9PyXjfIldYeE/nGafvAw/Z1q
        Iz1RPfsv5F+GpQ92u57q63/bYT1/X0vkeK3RWs/0d+K63KDW6vsdXoWpADTfNsg9bab97JM+0emgGXej
        LtOu63Y51ddudn28TM6I9IFBbudCVLWudX5imGVHPWO8t+u1TLadEOdfBjAOJ6qnmwa5lwvR3zxSEXjG
        9clhDjAF3socJekW58fNvGbUpd5DlU80XzeIPdwzfV3o+gQx+42QT9bqrTebruXhEwtVFfS7nR8/s++8
        GDXSMwaxd/tGPeC+6cGJYpL2s8VzVZG+v+hatt8TIOR9ru8H054X1Fqc38+9OjD6O/4x15BOJ0rkX2qN
        5sm9rqW6jVXqtn7g+v4M86iQ/1H/pK0fe9OaeLp1vDrwm2NCYHueUM8Ul68bnxvt53rqN3OpsP9I3fa/
        PbiPQzDy1ShJ71L/P1EZnzukn2tplX4GiRvpBfrNQPobS2rmmP6Ofnuuiu1n2u+4XL+wcpDrqcOir0Or
        ifxY+70ATF9Hvdq6WF+2jUzLowe5jgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA4D/X0rVRDsqHOQAAAABJRU5ErkJggg==
</value>
  </data>
</root>